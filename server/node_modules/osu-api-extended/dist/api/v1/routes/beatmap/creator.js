"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = void 0;
const request_1 = require("../../../../utility/request");
const mods_1 = require("../../../../utility/mods");
const creator_1 = __importDefault(require("../../form/beatmap/creator"));
const request = (0, request_1.namespace)('https://osu.ppy.sh/api/');
const _mode = [
    'osu',
    'taiko',
    'fruits',
    'mania',
];
exports.description = {
    auth: 2,
    title: __filename,
    method: 'GET',
    description: 'Return list of beatmaps for specified user',
    params: [
        {
            type: 'number',
            name: 'id',
            optional: false,
            description: 'id of the user',
        },
        {
            type: 'string',
            name: 'mode',
            optional: true,
            description: '\`\`\`osu\`\`\` or \`\`\`fruits\`\`\` or \`\`\`mania\`\`\` or \`\`\`taiko\`\`\`',
        },
        {
            type: 'string',
            name: 'converted',
            optional: true,
            description: '\`\`\`0\`\`\` or \`\`\`1\`\`\`',
        },
        {
            type: 'string',
            name: 'hash',
            optional: true,
            description: 'beatmap file hash',
        },
        {
            type: 'string',
            name: 'limit',
            optional: true,
            description: 'Maximum number of results',
        },
        {
            type: 'string/number',
            name: 'mods',
            optional: true,
            description: 'Name of the mods \`\`\`HDDT\`\`\` or mods number \`\`\`72\`\`\`',
        },
        {
            type: 'string',
            name: 'since',
            optional: true,
            description: 'Return all beatmaps ranked or loved since this date. Must be a MySQL date. In UTC',
        },
    ],
};
;
const name = async (user_id, obj = {}) => {
    const params = {
        u: user_id,
        m: _mode.indexOf(obj.mode),
        a: obj.converted,
        h: obj.hash,
        since: obj.since,
        mods: (0, mods_1.id)(obj.mods),
        limit: obj.limit,
    };
    const data = await request(`get_beatmaps`, {
        method: 'GET',
        params: params,
    });
    if (data.length == 0)
        return null;
    const format = (0, creator_1.default)(data);
    return format;
};
exports.default = name;
//# sourceMappingURL=creator.js.map