"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = void 0;
const request_1 = require("../../../../../utility/request");
const auth = __importStar(require("../../../../../utility/auth"));
// const request: RequestNamepsace = namespace('https://osu.ppy.sh/api/v2/');
exports.description = {
    auth: 1,
    title: __filename,
    method: 'GET',
    description: 'Return topic data and posts list',
    params: [
        {
            type: 'number',
            name: 'topic',
            optional: false,
            description: 'Topic id',
        },
        {
            name: 'object',
            params: [
                {
                    type: 'string',
                    name: 'cursor_string',
                    optional: true,
                    description: 'Parameter for pagination',
                },
                {
                    type: 'string',
                    name: 'sort',
                    optional: true,
                    description: '\`\`\`id_asc\`\`\` or \`\`\`id_desc\`\`\`',
                },
                {
                    type: 'number',
                    name: 'limit',
                    optional: true,
                    description: 'Maximum number of posts to be returned (20 default, 50 at most)',
                },
                {
                    type: 'string',
                    name: 'start',
                    optional: true,
                    description: 'First post id to be returned with sort set to id_asc. This parameter is ignored if cursor_string is specified',
                },
                {
                    type: 'string',
                    name: 'end',
                    optional: true,
                    description: 'Last post id to be returned with sort set to id_desc. This parameter is ignored if cursor_string is specified.',
                },
            ]
        },
    ],
};
;
const name = async (ids = [1, 2, 4]) => {
    let body = `_token=${auth.cache_v2}`;
    console.log(body);
    ids.forEach(r => body += `&forum_topic_vote[option_ids][]=${r}`);
    const data = await (0, request_1.request)(`https://osu.ppy.sh/community/forums/topics/340082/vote`, {
        method: 'POST',
        headers: {
            "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            "x-csrf-token": auth.cache_v2,
        },
        data: body,
    });
    return data;
};
exports.default = name;
//# sourceMappingURL=vote.js.map