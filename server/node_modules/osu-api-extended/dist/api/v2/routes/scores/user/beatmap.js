"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = void 0;
const request_1 = require("../../../../../utility/request");
const request = (0, request_1.namespace)('https://osu.ppy.sh/api/v2/');
exports.description = {
    auth: 1,
    title: __filename,
    method: 'GET',
    description: 'Return best user score on beatmap',
    params: [
        {
            type: 'number',
            name: 'beatmap',
            optional: false,
            description: 'id of the beatmap',
        },
        {
            type: 'string/number',
            name: 'user',
            optional: true,
            description: 'id of the user',
        },
        {
            name: 'object',
            optional: true,
            params: [
                {
                    type: 'string',
                    name: 'mode',
                    optional: true,
                    description: '\`\`\`osu\`\`\` or \`\`\`fruits\`\`\` or \`\`\`mania\`\`\` or \`\`\`taiko\`\`\`',
                },
                {
                    type: 'string[]',
                    name: 'mods',
                    optional: true,
                    description: 'Array of matching mods [\'HD\', \'DT\']',
                },
                {
                    type: 'boolean',
                    name: 'best_only',
                    optional: true,
                    description: 'Return only best score from the beatmap',
                }
            ]
        },
    ],
};
const name = async (beatmap, user, obj) => {
    let url = `beatmaps/${beatmap}/scores/users/${user}`;
    if (!obj.best_only)
        url += '/all';
    const data = await request(url, {
        method: 'GET',
        params: obj,
    });
    if (obj.best_only == true) {
        data.score.position = data.position;
        return [data.score];
    }
    ;
    if (data.scores)
        return data.scores;
    return data;
};
exports.default = name;
//# sourceMappingURL=beatmap.js.map