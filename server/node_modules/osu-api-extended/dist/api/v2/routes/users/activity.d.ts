export declare const description: any;
export interface types {
    /**
     * Return list of recent user activity
     *
     * ## Example
     *
     * ```js
     * const { v2, auth } = require('osu-api-extended');
     *
     * const main = async () => {
     *   await auth.login(CLIENT_ID, CLIENT_SECRET);
     *
     *   const v2_users_activity = await v2.users.activity(user, object);
     *   console.log(v2_users_activity);
     * };
     *
     * main();
     * ```
     * @param {number} user id of the user
     * @param {number} object.limit undefined
     * @param {string} object.offset undefined
    */
    (user: number, obj: {
        limit?: number;
        offset?: string;
    }): Promise<response[]>;
}
export interface response {
    created_at: string;
    createdAt: string;
    id: number;
    type: string;
    mode: string;
    beatmap: {
        title: string;
        url: string;
    };
    user: {
        username: string;
        url: string;
    };
    scoreRank: string;
    rank: number;
    achievement: {
        icon_url: string;
        id: number;
        name: string;
        grouping: string;
        ordering: number;
        slug: string;
        description: string;
        mode: string;
        instructions: string;
    };
    approval: string;
    beatmapset: {
        title: string;
        url: string;
    };
}
declare const name: types;
export default name;
